plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.21'
    id 'com.jfrog.artifactory' version '4.27.1'
    id 'maven-publish'
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven-publish'
apply plugin: 'kotlin'

ext {
    group 'com.markee'
    version '1.2.1'
}


repositories {
    mavenCentral()
    jcenter()
}

dependencies {

    def mysqlConnectionVersion = '5.1.6'
    def kotlin_exposed_version = '0.28.1'
    def hikariConnectionPooling = '4.0.1'


    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "mysql:mysql-connector-java:8.0.19"
    //compile "org.mariadb.jdbc:mariadb-java-client:2.1.2"
    implementation "com.zaxxer:HikariCP:$hikariConnectionPooling"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.4.21"
    implementation "org.jetbrains.exposed:exposed-core:$kotlin_exposed_version"
    implementation "org.jetbrains.exposed:exposed-dao:$kotlin_exposed_version"
    implementation "org.jetbrains.exposed:exposed-jdbc:$kotlin_exposed_version"

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "mysql:mysql-connector-java:8.0.19"
    testImplementation "org.mockito:mockito-core:1.+"

    testCompile "com.zaxxer:HikariCP:3.4.5"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

String packageGroup = "com.markee"
String packageName = "coredb"
String packageVersion = version
String artifactoryRepository = "java-libs-release-local"
String artifactoryUser = "cornel.balaban"
String artifactoryPwd = "Testare_07"

jar {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    //from configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
}

artifactory {
    publish {
        contextUrl = 'https://markee.jfrog.io/artifactory/'
        repository {
            repoKey = artifactoryRepository
            username = artifactoryUser
            password = artifactoryPwd
            maven = true
        }
        defaults {
            publications('jarPublish')
            publishArtifacts = true
            publishPom = true
        }
    }
}

publishing {
    publications {
        jarPublish(MavenPublication) {
            groupId packageGroup
            artifactId packageName
            version = packageVersion

            // Usually "from components.java" method call is used in this
            // place which adds compiled files or dependencies to the published
            // library. This is problematic for multi-project builds since
            // dependency to a submodule is not correcly processed by the
            // publication plugin. To avoid this we will use result of jar
            // task (Fat Jar file) as a single artifact that will be published.
            // See documentation for more details: https://docs.gradle.org/current/dsl/org.gradle.api.publish.maven.MavenPublication.html#org.gradle.api.publish.maven.MavenPublication:artifact(java.lang.Object)
            //artifacts = [ jar ]
            artifact ("$buildDir/libs/core_db-${version}.jar")

            pom.withXml {
                def dependencies = asNode().appendNode('dependencies')
                configurations.getByName("compileClasspath").getResolvedConfiguration()
                        .getFirstLevelModuleDependencies().each {
                    def dependency = dependencies.appendNode('dependency')
                    dependency.appendNode('groupId', it.moduleGroup)
                    dependency.appendNode('artifactId', it.moduleName)
                    dependency.appendNode('version', it.moduleVersion)
                }
            }
        }
    }
}

task publishBuild(type: Exec) {
    commandLine("./gradlew build -x test")
    commandLine("./gradlew artifactoryPublish")
}

apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: "com.jfrog.artifactory"





